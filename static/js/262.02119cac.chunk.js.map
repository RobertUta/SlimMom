{"version":3,"file":"static/js/262.02119cac.chunk.js","mappings":"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","sources":["components/Decoration/Decoration.jsx","components/shared/Button/Button.jsx","webpack://SlimMom/./src/components/RegistrationForm/RegistrationForm.module.scss?51a4","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/index.js","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nclass Decoration extends Component {\n  state = {};\n  render() {\n    let addStyle = '';\n    if (this.props.isLoginPage) {\n      addStyle = '-login';\n    } else if (this.props.isCalculationPage) {\n      addStyle = '-calculation';\n    }\n    return (\n      <section className={`decoration${addStyle}`}>\n        <div className=\"dec-spot\"></div>\n        <div className=\"dec-strawberry\"></div>\n        <div className=\"dec-leaves\"></div>\n        <div className=\"dec-banana\"></div>\n      </section>\n    );\n  }\n}\n\nexport default Decoration;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = (props) => {\n  const { children, type, className, clickHandler } = props;\n\n  return (\n    <button type={type} className={className} onClick={clickHandler && clickHandler}>\n      {children}\n    </button>\n  );\n};\nButton.defaultProps = {\n  className: 'primary-button',\n  clickHandler: null,\n  type: 'button',\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"registrationForm\":\"RegistrationForm_registrationForm__eEdi2\",\"registrationInputs\":\"RegistrationForm_registrationInputs__dylgS\",\"inputField\":\"RegistrationForm_inputField__2z8Sm\",\"registrationButtons\":\"RegistrationForm_registrationButtons__gE6ZQ\",\"formLabel\":\"RegistrationForm_formLabel__kTcWk\",\"validField\":\"RegistrationForm_validField__Iv9AH\",\"errorInput\":\"RegistrationForm_errorInput__egUcA\"};","\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch,  } from 'react-redux';\nimport Button from '../shared/Button/Button';\nimport ops from '../../redux/auth/authOperations';\nimport css from './RegistrationForm.module.scss';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Decoration from '../Decoration';\n\nconst RegisterSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(2, 'Incorrect field length')\n    .max(50, 'Character limit exceeded')\n    .required('Required field *'),\n  email: Yup.string().min(2, 'Incorrect field length').max(50, 'Character limit exceeded').required('Required field *'),\n  password: Yup.string().required('Required field *').min(8, 'Too short!'),\n});\n\nconst RegistrationForm = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n\n  const handleClick = () => {\n    history.push('/login');\n  };\n\n  const handleSubmit = async (values) => {\n    dispatch(ops.register(values, history));\n  };\n\n  return (\n    <>\n      <Decoration isLoginPage={true} />\n      <section className=\"container\">\n        <Formik\n          initialValues={{ email: '', password: '', username: '' }}\n          onSubmit={handleSubmit}\n          validationSchema={RegisterSchema}\n        >\n          {({ errors, touched }) => (\n            <Form className={css.registrationForm}>\n              <h1>REGISTER</h1>\n              <div className={css.registrationInputs}>\n                <label className={css.formLabel}>\n                  <Field\n                    className={`${css.inputField} ${errors.username && touched.username ? css.errorInput : ''}`}\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Name *\"\n                  />\n                  <ErrorMessage className={css.validField} name=\"username\" component=\"span\" />\n                </label>\n                <label className={css.formLabel}>\n                  <Field\n                    className={`${css.inputField} ${errors.email && touched.email ? css.errorInput : ''}`}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"E-mail *\"\n                  />\n                  <ErrorMessage className={css.validField} name=\"email\" component=\"span\" />\n                </label>\n                <label className={css.formLabel}>\n                  <Field\n                    className={`${css.inputField} ${errors.password && touched.password ? css.errorInput : ''}`}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password *\"\n                  />\n                  <ErrorMessage className={css.validField} name=\"password\" component=\"span\" />\n                </label>\n              </div>\n              <div className={css.registrationButtons}>\n                <Button clickHandler={handleClick}>LOGIN</Button>\n                <Button type=\"submit\" className=\"secondary-button\">\n                  REGISTER\n                </Button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </section>\n    </>\n  );\n};\n\nexport default RegistrationForm;","import RegistrationPage from './RegistrationPage';\n\nexport default RegistrationPage;\n","import React from 'react';\nimport RegistrationForm from '../../components/RegistrationForm';\n\nconst RegistrationPage = (props) => <RegistrationForm history={props.history}>Test content</RegistrationForm>;\n\nexport default RegistrationPage;\n"],"names":["Decoration","Component","constructor","arguments","state","render","addStyle","this","props","isLoginPage","isCalculationPage","_jsxs","className","concat","children","_jsx","Button","type","clickHandler","onClick","defaultProps","RegisterSchema","Yup","shape","username","min","max","required","email","password","RegistrationForm","history","useHistory","dispatch","useDispatch","handleClick","push","_Fragment","Formik","initialValues","onSubmit","async","ops","register","values","validationSchema","_ref","errors","touched","Form","css","Field","name","placeholder","ErrorMessage","component"],"sourceRoot":""}