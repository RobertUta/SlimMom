{"version":3,"file":"static/js/681.3efad218.chunk.js","mappings":"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","sources":["components/Decoration/Decoration.jsx","components/shared/Button/Button.jsx","webpack://SlimMom/./src/components/LoginForm/LoginForm.module.scss?ebab","components/LoginForm/LoginForm.jsx","components/LoginForm/index.js","pages/LoginPage/index.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nclass Decoration extends Component {\n  state = {};\n  render() {\n    let addStyle = '';\n    if (this.props.isLoginPage) {\n      addStyle = '-login';\n    } else if (this.props.isCalculationPage) {\n      addStyle = '-calculation';\n    }\n    return (\n      <section className={`decoration${addStyle}`}>\n        <div className=\"dec-spot\"></div>\n        <div className=\"dec-strawberry\"></div>\n        <div className=\"dec-leaves\"></div>\n        <div className=\"dec-banana\"></div>\n      </section>\n    );\n  }\n}\n\nexport default Decoration;\n","import React from 'react';\nimport './Button.scss';\n\nconst Button = (props) => {\n  const { children, type, className, clickHandler } = props;\n\n  return (\n    <button type={type} className={className} onClick={clickHandler && clickHandler}>\n      {children}\n    </button>\n  );\n};\nButton.defaultProps = {\n  className: 'primary-button',\n  clickHandler: null,\n  type: 'button',\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"loginPage\":\"LoginForm_loginPage__wmPKb\",\"formLabel\":\"LoginForm_formLabel__ObJHc\",\"validField\":\"LoginForm_validField__Io81Q\",\"loginTitle\":\"LoginForm_loginTitle__OgJia\",\"loginForm\":\"LoginForm_loginForm__KjLm-\",\"errorInput\":\"LoginForm_errorInput__xXswd\",\"login\":\"LoginForm_login__WMpUZ\",\"password\":\"LoginForm_password__W6sqW\",\"buttons\":\"LoginForm_buttons__dGk6g\"};","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations, authActions } from '../../redux/auth';\nimport globalSelectors from '../../redux/global/globalSelectors';\nimport Decoration from '../Decoration';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Button from '../shared/Button';\nimport css from './LoginForm.module.scss';\n\nconst SignupSchema = Yup.object().shape({\n  email: Yup.string().min(2, 'Incorrect field length').max(50, 'Character limit exceeded').required('Required field *'),\n  password: Yup.string().required('Required field *').min(8, 'Incorrect field length'),\n});\n\nconst LoginForm = (props) => {\n  const handleClick = () => {\n    props.history.push('/register');\n  };\n  const handleSubmit = (values) => {\n    props.login(values);\n  };\n\n  return (\n    <>\n      <Decoration isLoginPage={true} />\n      <section className=\"container\">\n        <div className={css.loginPage}>\n          <h2 className={css.loginTitle}>LOGIN</h2>\n\n          <Formik initialValues={{ email: '', password: '' }} onSubmit={handleSubmit} validationSchema={SignupSchema}>\n            {({ errors, touched }) => (\n              <Form className={css.loginForm}>\n                <label className={css.formLabel}>\n                  <Field\n                    className={`${css.login} ${errors.email && touched.email ? css.errorInput : ''}`}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"E-mail *\"\n                  />\n                  <ErrorMessage className={css.validField} name=\"email\" component=\"span\" />\n                </label>\n\n                <label className={css.formLabel}>\n                  <Field\n                    className={`${css.password} ${errors.password && touched.password ? css.errorInput : ''}`}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password *\"\n                  />\n                  <ErrorMessage className={css.validField} name=\"password\" component=\"span\" />\n                </label>\n\n                <div className={css.buttons}>\n                  <Button type=\"submit\"> LOGIN </Button>\n                  <Button className=\"secondary-button\" clickHandler={handleClick}>\n                    REGISTER\n                  </Button>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </section>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  error: globalSelectors.getError(state),\n  test: state,\n});\nconst mapDispatchToProps = {\n  loginError: authActions.loginError,\n  clearError: authActions.clearError,\n  login: authOperations.login,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","import LoginForm from './LoginForm';\n\nexport default LoginForm;\n","import LoginPage from './LoginPage';\n\nexport default LoginPage;\n","import React from 'react';\nimport LoginForm from '../../components/LoginForm';\n\nconst LoginPage = (props) => <LoginForm {...props} />;\n\nexport default LoginPage;\n"],"names":["Decoration","Component","constructor","arguments","state","render","addStyle","this","props","isLoginPage","isCalculationPage","_jsxs","className","concat","children","_jsx","Button","type","clickHandler","onClick","defaultProps","SignupSchema","Yup","shape","email","min","max","required","password","mapDispatchToProps","loginError","authActions","clearError","login","authOperations","connect","error","globalSelectors","getError","test","handleClick","history","push","_Fragment","css","Formik","initialValues","onSubmit","values","validationSchema","_ref","errors","touched","Form","Field","name","placeholder","ErrorMessage","component","LoginForm"],"sourceRoot":""}